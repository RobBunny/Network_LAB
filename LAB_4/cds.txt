//SERVER
import com.sun.net.httpserver.*;
import java.io.*;
import java.net.*;
import java.nio.file.*;
import java.util.concurrent.*;

public class LAB3HTTPFileServer {
    public static void main(String[] args) throws IOException {
        int port = 8080;
        HttpServer server = HttpServer.create(new InetSocketAddress(port), 0);

        // Context for downloading files
        server.createContext("/download", new DownloadHandler());

        // Context for uploading files
        server.createContext("/upload", new UploadHandler());

        // Thread pool for handling multiple clients
        server.setExecutor(Executors.newFixedThreadPool(10));

        System.out.println("HTTP File Server started on port " + port);
        server.start();
    }

    // --- Handler for file download ---
    static class DownloadHandler implements HttpHandler {
        public void handle(HttpExchange exchange) throws IOException {
            if (!exchange.getRequestMethod().equalsIgnoreCase("GET")) {
                exchange.sendResponseHeaders(405, -1); // Method not allowed
                return;
            }

            // Extract filename from query string
            String query = exchange.getRequestURI().getQuery();
            String fileName = null;
            if (query != null && query.startsWith("filename=")) {
                fileName = query.substring("filename=".length());
            }

            if (fileName == null) {
                String response = "Filename parameter missing.";
                exchange.sendResponseHeaders(400, response.length());
                exchange.getResponseBody().write(response.getBytes());
                exchange.close();
                return;
            }

            File file = new File(fileName);
            if (!file.exists() || !file.isFile()) {
                String response = "File Not Found";
                exchange.sendResponseHeaders(404, response.length());
                exchange.getResponseBody().write(response.getBytes());
                exchange.close();
                return;
            }

            // Set headers
            exchange.getResponseHeaders().set("Content-Type", "application/octet-stream");
            exchange.getResponseHeaders().set("Content-Disposition", "attachment; filename=\"" + file.getName() + "\"");
            exchange.sendResponseHeaders(200, file.length());

            // Send file content
            try (OutputStream os = exchange.getResponseBody();
                 FileInputStream fis = new FileInputStream(file)) {
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = fis.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }
            }
            System.out.println("File " + fileName + " sent to client.");
        }
    }

    // --- Handler for file upload ---
    static class UploadHandler implements HttpHandler {
        public void handle(HttpExchange exchange) throws IOException {
            if (!exchange.getRequestMethod().equalsIgnoreCase("POST")) {
                exchange.sendResponseHeaders(405, -1);
                return;
            }

            String uploadedFileName = "upload_" + System.currentTimeMillis() + ".dat";
            try (InputStream is = exchange.getRequestBody();
                 FileOutputStream fos = new FileOutputStream(uploadedFileName)) {

                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = is.read(buffer)) != -1) {
                    fos.write(buffer, 0, bytesRead);
                }
            }

            String response = "File uploaded successfully as " + uploadedFileName;
            exchange.sendResponseHeaders(200, response.length());
            exchange.getResponseBody().write(response.getBytes());
            exchange.close();
            System.out.println(response);
        }
    }
}

//CLIENT
import java.io.*;
import java.net.*;
import java.util.Scanner;

public class LAB3HTTPFileClient {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Choose option: 1) Upload File  2) Download File");
        int choice = scanner.nextInt();
        scanner.nextLine(); // consume newline

        if (choice == 1) {
            uploadFile(scanner);
        } else if (choice == 2) {
            downloadFile(scanner);
        } else {
            System.out.println("Invalid choice.");
        }
    }

    // --- Upload file to server ---
    private static void uploadFile(Scanner scanner) {
        try {
            System.out.print("Enter path of file to upload: ");
            String filePath = scanner.nextLine();
            File file = new File(filePath);

            if (!file.exists()) {
                System.out.println("File does not exist.");
                return;
            }

            URL url = new URL("http://localhost:8080/upload");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setDoOutput(true);

            try (FileInputStream fis = new FileInputStream(file);
                 OutputStream os = conn.getOutputStream()) {
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = fis.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }
            }

            // Read response
            BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = br.readLine();
            System.out.println("Server: " + response);

            conn.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // --- Download file from server ---
    private static void downloadFile(Scanner scanner) {
        try {
            System.out.print("Enter filename to download: ");
            String fileName = scanner.nextLine();

            URL url = new URL("http://localhost:8080/download?filename=" + URLEncoder.encode(fileName, "UTF-8"));
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");

            int responseCode = conn.getResponseCode();
            if (responseCode == 200) {
                try (InputStream is = conn.getInputStream();
                     FileOutputStream fos = new FileOutputStream("downloaded_" + fileName)) {
                    byte[] buffer = new byte[4096];
                    int bytesRead;
                    while ((bytesRead = is.read(buffer)) != -1) {
                        fos.write(buffer, 0, bytesRead);
                    }
                }
                System.out.println("File downloaded successfully as downloaded_" + fileName);
            } else if (responseCode == 404) {
                System.out.println("File not found on server.");
            } else {
                System.out.println("Server returned HTTP response code: " + responseCode);
            }

            conn.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
